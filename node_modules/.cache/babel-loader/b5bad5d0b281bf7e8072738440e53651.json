{"ast":null,"code":"var _jsxFileName = \"/Users/celinaphillips/Desktop/fe3-final/src/Components/utils/ContextProvider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext();\nconst initialApiState = [];\n\nconst apiReducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_DENTISTAS':\n      return action.payload;\n\n    default:\n      throw new Error();\n  }\n};\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(data => apiDispatch({\n      type: 'GET_DENTISTAS',\n      payload: data\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      apiState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"rXkSgcDUVIZKf2TXDD6yRm6ECSw=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useReducer","initialState","theme","data","ContextGlobal","initialApiState","apiReducer","state","action","type","payload","Error","ContextProvider","children","apiState","apiDispatch","url","fetch","then","res","json","useContextGlobal"],"sources":["/Users/celinaphillips/Desktop/fe3-final/src/Components/utils/ContextProvider.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect, useReducer } from \"react\"\n\nexport const initialState = {theme: \"\", data: []}\n\nexport const ContextGlobal = createContext();\n\nconst initialApiState = []\n\nconst apiReducer = (state, action) => {\n  switch(action.type){\n      case 'GET_DENTISTAS':\n          return action.payload\n      default:\n          throw new Error\n  }\n}\n\n\nconst ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [apiState, apiDispatch] = useReducer(apiReducer, initialApiState)\n\n  const url = 'https://jsonplaceholder.typicode.com/users'\n\n  useEffect(() => {\n    fetch(url)\n    .then(res => res.json())\n    .then(data => apiDispatch({type: 'GET_DENTISTAS', payload: data}))\n}, [])\n\n  return (\n    <ContextGlobal.Provider value={{apiState}}>\n      {children}\n    </ContextGlobal.Provider>\n  )\n}\n\nexport default ContextProvider\nexport const useContextGlobal = () => useContext(ContextGlobal)"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,EAAyDC,UAAzD,QAA2E,OAA3E;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;AAEP,MAAMS,eAAe,GAAG,EAAxB;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACpC,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,eAAL;MACI,OAAOD,MAAM,CAACE,OAAd;;IACJ;MACI,MAAM,IAAIC,KAAJ,EAAN;EAJR;AAMD,CAPD;;AAUA,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACxC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,UAAU,CAACM,UAAD,EAAaD,eAAb,CAA1C;EAEA,MAAMW,GAAG,GAAG,4CAAZ;EAEAjB,SAAS,CAAC,MAAM;IACdkB,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMf,IAAI,IAAIY,WAAW,CAAC;MAACN,IAAI,EAAE,eAAP;MAAwBC,OAAO,EAAEP;IAAjC,CAAD,CAFzB;EAGH,CAJU,EAIR,EAJQ,CAAT;EAMA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACW;IAAD,CAA/B;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAjBD;;GAAMD,e;;KAAAA,e;AAmBN,eAAeA,eAAf;AACA,OAAO,MAAMS,gBAAgB,GAAG;EAAA;;EAAA,OAAMxB,UAAU,CAACO,aAAD,CAAhB;AAAA,CAAzB;;IAAMiB,gB"},"metadata":{},"sourceType":"module"}